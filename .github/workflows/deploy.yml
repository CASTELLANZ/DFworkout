# GitHub Actions 워크플로우의 이름
name: Deploy to Firebase Hosting

# 언제 이 자동화를 실행할지 지정합니다.
on:
  # 1. main 브랜치에 코드가 push될 때마다 실행됩니다.
  push:
    branches:
      - main
  
  # 2. 수동으로 실행할 수 있는 버튼을 추가합니다.
  workflow_dispatch:

# 어떤 작업들을 할지 정의합니다.
jobs:
  build_and_deploy:
    # 이 작업은 우분투(리눅스) 환경에서 실행됩니다.
    runs-on: ubuntu-latest

    # 구체적인 작업 순서입니다.
    steps:
      # 1. GitHub 저장소의 최신 코드를 내려받습니다.
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. (핵심) 코드의 자리표시자를 GitHub Secrets 값으로 교체합니다.
      - name: Replace Firebase Config
        run: |
          sed -i 's|__FIREBASE_API_KEY__|${{ secrets.FIREBASE_API_KEY }}|g' index.html
          sed -i 's|__FIREBASE_AUTH_DOMAIN__|${{ secrets.FIREBASE_AUTH_DOMAIN }}|g' index.html
          sed -i 's|__FIREBASE_PROJECT_ID__|${{ secrets.FIREBASE_PROJECT_ID }}|g' index.html
          sed -i 's|__FIREBASE_STORAGE_BUCKET__|${{ secrets.FIREBASE_STORAGE_BUCKET }}|g' index.html
          sed -i 's|__FIREBASE_MESSAGING_SENDER_ID__|${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}|g' index.html
          sed -i 's|__FIREBASE_APP_ID__|${{ secrets.FIREBASE_APP_ID }}|g' index.html

      # 3. 키가 모두 삽입된 최종 파일을 Firebase에 배포합니다.
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live
